/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _es2015Index = __webpack_require__(2);\n\nvar _es2015Index2 = _interopRequireDefault(_es2015Index);\n\nvar _TestSprite = __webpack_require__(3);\n\nvar _TestSprite2 = _interopRequireDefault(_TestSprite);\n\nvar Game = (function (_Jest) {\n    _inherits(Game, _Jest);\n\n    function Game(options) {\n        _classCallCheck(this, Game);\n\n        _get(Object.getPrototypeOf(Game.prototype), 'constructor', this).call(this, options);\n    }\n\n    _createClass(Game, [{\n        key: 'init',\n        value: function init() {\n            _get(Object.getPrototypeOf(Game.prototype), 'init', this).call(this);\n            this.gameState = {};\n            var gameState = this.gameState;\n            gameState.sprites = [];\n            var testSprite = new _TestSprite2['default']({ x: Math.random() * 640, y: Math.random() * 480 });\n            gameState.sprites.push(testSprite);\n            this.addEntity(testSprite);\n        }\n    }]);\n\n    return Game;\n})(_es2015Index2['default']);\n\nvar AnimatedSpritesExample = new Game({\n    canvas: \"jestCanvas\",\n    width: 640,\n    height: 480,\n    frameRate: Math.ceil(1000 / 60),\n    showFrameRate: true\n});\n\nwindow.onload = function () {\n    AnimatedSpritesExample.load();\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRDoveGFtcHAvaHRkb2NzL1Byb2plY3RzL2plc3QvZXhhbXBsZXMvYW5pbWF0ZWQgc3ByaXRlcy9pbmRleC5qcz8yOTI5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozt1Q0FBaUIsQ0FBb0I7Ozs7c0NBQ2QsQ0FBYzs7OztBQUVyQyxJQUFJLElBQUk7Y0FBUyxJQUFJOztBQUNOLGFBREUsSUFBSSxDQUNMLE9BQU8sRUFBQzs4QkFEUCxJQUFJOztBQUViLG1DQUZTLElBQUksNkNBRVAsT0FBTyxFQUFFO0tBQ2xCOztpQkFIWSxJQUFJOztlQUliLGdCQUFFO0FBQ0YsdUNBTFMsSUFBSSxzQ0FLQTtBQUNiLGdCQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztBQUNwQixnQkFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztBQUMvQixxQkFBUyxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7QUFDdkIsZ0JBQUksVUFBVSxHQUFHLDRCQUFlLEVBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0FBQ25GLHFCQUFTLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNuQyxnQkFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUM5Qjs7O1dBWlksSUFBSTs0QkFhcEI7O0FBRUQsSUFBSSxzQkFBc0IsR0FBRyxJQUFJLElBQUksQ0FBQztBQUMxQixVQUFNLEVBQUcsWUFBWTtBQUNyQixTQUFLLEVBQUUsR0FBRztBQUNWLFVBQU0sRUFBRyxHQUFHO0FBQ1osYUFBUyxFQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFDLEVBQUUsQ0FBQztBQUM5QixpQkFBYSxFQUFHLElBQUk7Q0FDdkIsQ0FBQyxDQUFDOztBQUVYLE1BQU0sQ0FBQyxNQUFNLEdBQUcsWUFBVTtBQUN0QiwwQkFBc0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQztDQUNqQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBKZXN0IGZyb20gJy4uLy4uL2VzMjAxNS9pbmRleCc7XHJcbmltcG9ydCBUZXN0U3ByaXRlIGZyb20gJy4vVGVzdFNwcml0ZSc7XHJcblxyXG5sZXQgR2FtZSA9IGNsYXNzIEdhbWUgZXh0ZW5kcyBKZXN0e1xyXG4gICAgY29uc3RydWN0b3Iob3B0aW9ucyl7XHJcbiAgICAgICAgc3VwZXIob3B0aW9ucyk7XHJcbiAgICB9XHJcbiAgICBpbml0KCl7XHJcbiAgICAgICAgc3VwZXIuaW5pdCgpO1xyXG4gICAgICAgIHRoaXMuZ2FtZVN0YXRlID0ge307XHJcbiAgICAgICAgbGV0IGdhbWVTdGF0ZSA9IHRoaXMuZ2FtZVN0YXRlO1xyXG4gICAgICAgIGdhbWVTdGF0ZS5zcHJpdGVzID0gW107XHJcbiAgICAgICAgbGV0IHRlc3RTcHJpdGUgPSBuZXcgVGVzdFNwcml0ZSh7eDogTWF0aC5yYW5kb20oKSAqIDY0MCwgeTogTWF0aC5yYW5kb20oKSAqIDQ4MCB9KTtcclxuICAgICAgICBnYW1lU3RhdGUuc3ByaXRlcy5wdXNoKHRlc3RTcHJpdGUpO1xyXG4gICAgICAgIHRoaXMuYWRkRW50aXR5KHRlc3RTcHJpdGUpO1xyXG4gICAgfVxyXG59XHJcblxyXG5sZXQgQW5pbWF0ZWRTcHJpdGVzRXhhbXBsZSA9IG5ldyBHYW1lKHtcclxuICAgICAgICAgICAgY2FudmFzIDogXCJqZXN0Q2FudmFzXCIsXHJcbiAgICAgICAgICAgIHdpZHRoOiA2NDAsXHJcbiAgICAgICAgICAgIGhlaWdodCA6IDQ4MCxcclxuICAgICAgICAgICAgZnJhbWVSYXRlIDogTWF0aC5jZWlsKDEwMDAvNjApLFxyXG4gICAgICAgICAgICBzaG93RnJhbWVSYXRlIDogdHJ1ZVxyXG4gICAgICAgIH0pO1xyXG5cclxud2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uKCl7XHJcbiAgICBBbmltYXRlZFNwcml0ZXNFeGFtcGxlLmxvYWQoKTtcclxufTtcclxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogRDoveGFtcHAvaHRkb2NzL1Byb2plY3RzL2plc3QvZXhhbXBsZXMvYW5pbWF0ZWQgc3ByaXRlcy9pbmRleC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjEuanMifQ==");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _ResourceManager = __webpack_require__(6);\n\nvar _ResourceManager2 = _interopRequireDefault(_ResourceManager);\n\nvar _Renderer = __webpack_require__(7);\n\nvar _Renderer2 = _interopRequireDefault(_Renderer);\n\nvar _Label = __webpack_require__(8);\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nvar Jest = (function () {\n    function Jest(options) {\n        _classCallCheck(this, Jest);\n\n        options = options || {};\n        this.renderCanvas = options.canvas || \"playCanvas\";\n        this.width = options.width || 320;\n        this.height = options.height || 240;\n        this.frameRate = options.frameRate || Math.ceil(1000 / 60);\n        this.showFrameRate = options.showFrameRate || false;\n        this.stateName = options.stateName || \"0\";\n\n        // State info\n        this.states = [];\n        this.currentState = {};\n\n        // Render stuff\n        this.renderer = {};\n        this.renderList = [];\n        this.entities = [];\n\n        // Timing\n        this.intervalId = {};\n        this.lastTime = Date.now();\n        this.accTime = 0;\n        this.timeStep = 1;\n\n        // game bounds\n        this.bounds = { x: 0, y: 0, width: this.width, height: this.height };\n\n        // used to show the fps\n        this.frameRateLabel = {};\n\n        // init the utilities and resource manager\n        this.resourceManager = new _ResourceManager2['default']();\n\n        // List of entities in a recent collision\n        this.hitEntities = [];\n\n        // Keep track of how many particles we have on screen\n        this.particleCount = 0;\n\n        Jest.frameRate = this.frameRate;\n        Jest.bounds = this.bounds;\n        Jest.particleCount = this.particleCount;\n        Jest.utilities = this.utilities;\n        Jest.states = this.states;\n        Jest.currentState = this.currentState;\n        Jest.focused = true;\n        Jest.keys = [];\n    }\n\n    /**\r\n    * Jest.load()\r\n    *\r\n    * prepares the canvas for rendering, and starts the update process\r\n    **/\n\n    _createClass(Jest, [{\n        key: 'load',\n        value: function load() {\n            this.loaded(this);\n        }\n\n        /**\r\n         * Jest.loaded()\r\n         * object event\r\n         * makes sure everything is loaded until continuing\r\n         **/\n    }, {\n        key: 'loaded',\n        value: function loaded(game) {\n            var self = this;\n            if (this.resourceManager.loadingComplete) {\n                game.init();\n                return true;\n            } else {\n                setTimeout(function () {\n                    self.loaded(game);\n                }, 100);\n                return false;\n            }\n        }\n\n        /**\r\n         * Jest.update()\r\n         *\r\n         * Main update loop for the game, updates all objects, and calls the renderer.\r\n         **/\n    }, {\n        key: 'update',\n        value: function update() {\n            var curTime = Date.now(),\n                update = this.update;\n\n            this.deltaTime = curTime - this.lastTime;\n            this.lastTime = curTime;\n            this.accTime += this.deltaTime;\n\n            // Limit the delta queing\n            if (this.accTime > 60) {\n                this.accTime = 0;\n            }\n\n            while (this.accTime > this.timeStep) {\n                this.accTime -= this.timeStep;\n                var entities = this.entities,\n                    entLen = this.entities.length;\n\n                while (entLen--) {\n                    var object = entities[entLen];\n                    if (object !== undefined) {\n                        if (object.live) {\n                            object.update(this.timeStep / 100);\n                        } else {\n                            this.removeEntity(object);\n                        }\n                    }\n                }\n            }\n\n            this.renderer.redraw();\n            this.frameRateLabel.text = Math.round(1000 / this.deltaTime) + \" fps\";\n            this.currentFrameRate = Math.round(1000 / this.deltaTime);\n\n            var self = this;\n            requestAnimationFrame(function () {\n                self.update();\n            });\n        }\n\n        /**\r\n         * Jest.init()\r\n         *\r\n         * prepares the canvas for rendering, and starts the update process\r\n         **/\n    }, {\n        key: 'init',\n        value: function init() {\n            // base for starting, presetup ect.\n            var self = this;\n\n            this.renderCanvas = document.getElementById(this.renderCanvas);\n\n            if (this.renderCanvas === null) {\n                this.renderCanvas = document.createElement(\"canvas\");\n            }\n\n            // disable dragging\n            this.renderCanvas.draggable = false;\n\n            // determine if the game has the focus or not\n            document.addEventListener(\"touchstart\", function (event) {\n                if (event.target !== self.renderCanvas) {\n                    Jest.focused = false;\n                } else {\n                    Jest.focused = true;\n                }\n            });\n\n            //this.renderCanvas.addEventListener('touchstart', function(event){Jest.focused = true; self.clicked(event,self);}, false);\n            this.renderCanvas.addEventListener('click', function (event) {\n                Jest.focused = true;self.clicked(event, self);\n            }, false);\n            this.renderCanvas.addEventListener('mousemove', function (event) {\n                self.mouseMove(event, self);\n            }, false);\n            this.renderCanvas.addEventListener('mousedown', function (event) {\n                self.mouseDown(event, self);\n            }, false);\n            this.renderCanvas.addEventListener('mouseup', function (event) {\n                self.mouseUp(event, self);\n            }, false);\n\n            this.renderCanvas.addEventListener('contextmenu', function (event) {\n                event.preventDefault();\n            }, false);\n\n            // mousewheel\n            this.renderCanvas.addEventListener(\"mousewheel\", function (event) {\n                self.mouseWheel(event, self);\n            }, false);\n            this.renderCanvas.addEventListener(\"DOMMouseScroll\", function (event) {\n                self.mouseWheel(event, self);\n            }, false);\n\n            // keypress\n            document.addEventListener(\"keydown\", function (event) {\n                if (Jest.focused) {\n                    self.keyDown(event, self);\n                }\n            }, false);\n            document.addEventListener(\"keyup\", function (event) {\n                if (Jest.focused) {\n                    self.keyUp(event, self);\n                }\n            }, false);\n\n            this.renderCanvas.width = this.width;\n            this.renderCanvas.height = this.height;\n\n            this.renderer = new _Renderer2['default'](this.renderCanvas);\n\n            this.addState(this.stateName);\n            this.switchState({ 'id': 0 });\n\n            // setup a label to display the frameRate\n            if (this.showFrameRate) {\n                this.frameRateLabel = new _Label2['default']({ 'text': ' ', x: 0, y: 30, z: 1, 'font': '14pt arial bold' });\n                this.addEntity(this.frameRateLabel);\n            }\n\n            this.mouseX = 0;\n            this.mouseY = 0;\n\n            this.moused = false;\n            this.leftDown = false;\n            this.rightDown = false;\n            this.midDown = false;\n\n            this.update();\n        }\n\n        /**\r\n         * Jest.getKey()\r\n         * returns the state of a key\r\n         **/\n    }, {\n        key: 'getKey',\n        value: function getKey(key) {\n            //todo: add logic to return the state of the key, get the keycode based off of thekey passed\n            return Jest.keys[key];\n        }\n\n        /**\r\n         * Jest.keyDown()\r\n         * sets the state of the key pressed to true\r\n         **/\n    }, {\n        key: 'keyDown',\n        value: function keyDown(event, self) {\n            Jest.keys[event.keyCode] = true;\n        }\n\n        /**\r\n         * Jest.keyUp()\r\n         * sets the state of the key pressed to false\r\n         **/\n    }, {\n        key: 'keyUp',\n        value: function keyUp(event, self) {\n            Jest.keys[event.keyCode] = false;\n        }\n\n        /**\r\n         * Jest.clicked()\r\n         * object event\r\n         * handles the click event for the canvas\r\n         * TODO update this, I dont like how it requires origin and pos\r\n         **/\n    }, {\n        key: 'clicked',\n        value: function clicked(event, self) {\n            this.cX = 0;\n            this.cY = 0;\n\n            if (event.pageX || event.pageY) {\n                this.cX = event.pageX;\n                this.cY = event.pageY;\n            } else if (event.changedTouches) {\n                this.cX = event.changedTouches[0].pageX;\n                this.cY = event.changedTouches[0].pageY;\n            } else {\n                this.cX = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n                this.cY = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n            }\n\n            this.cX -= self.renderCanvas.offsetLeft;\n            this.cY -= self.renderCanvas.offsetTop;\n\n            var id = self.entities.length,\n                entities = self.entities;\n\n            while (id--) {\n                var entity = entities[id];\n                if (entity.clickable && entity.pos && entity.origin) {\n                    if (this.cX > entity.pos.x - entity.origin.x && this.cX < entity.pos.x - entity.origin.x + entity.width && this.cY > entity.pos.y - entity.origin.y && this.cY < entity.pos.y - entity.origin.y + entity.height) {\n                        entity.clicked();\n                        if (entity.noClickThrough) {\n                            break;\n                        }\n                    }\n                }\n            }\n\n            return { 'clickX': this.cX, 'clickY': this.cY };\n        }\n\n        /**\r\n         * Jest.mouseMove()\r\n         * object event\r\n         * handles the mouse move event\r\n         **/\n    }, {\n        key: 'mouseMove',\n        value: function mouseMove(event, self) {\n            if (event.pageX || event.pageY) {\n                self.mouseX = event.pageX - self.renderCanvas.offsetLeft;\n                self.mouseY = event.pageY - self.renderCanvas.offsetTop;\n            } else {\n                self.mouseX = event.clientX + document.body.scrollLeft - document.body.clientLeft - self.renderCanvas.offsetLeft;\n                self.mouseY = event.clientY + document.body.scrollTop - document.body.clientTop - self.renderCanvas.offsetTop;\n            }\n        }\n    }, {\n        key: 'mouseDown',\n        value: function mouseDown(event, self) {\n            self.moused = true;\n            if ('which' in event) {\n                switch (event.which) {\n                    case 1:\n                        self.leftDown = true;\n                        break;\n                    case 2:\n                        self.midDown = true;\n                        break;\n                    case 3:\n                        self.rightDown = true;\n                        break;\n                }\n            }\n\n            this.mdX = 0;\n            this.mdY = 0;\n\n            if (event.pageX || event.pageY) {\n                this.mdX = event.pageX;\n                this.mdY = event.pageY;\n            } else {\n                this.mdX = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n                this.mdY = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n            }\n\n            this.mdX -= self.renderCanvas.offsetLeft;\n            this.mdY -= self.renderCanvas.offsetTop;\n\n            var id = self.entities.length,\n                entities = self.entities;\n\n            while (id--) {\n                var entity = entities[id];\n                if (entity.clickable && entity.pos && entity.origin) {\n                    if (this.mdX > entity.pos.x - entity.origin.x && this.mdX < entity.pos.x - entity.origin.x + entity.width && this.mdY > entity.pos.y - entity.origin.y && this.mdY < entity.pos.y - entity.origin.y + entity.height) {\n                        entity.mouseDown();\n                    }\n                }\n            }\n\n            return { 'mouseDownX': this.mdX, 'mouseDownY': this.mdY };\n        }\n    }, {\n        key: 'mouseUp',\n        value: function mouseUp(event, self) {\n            self.moused = false;\n            self.leftDown = false;\n            self.midDown = false;\n            self.rightDown = false;\n        }\n    }, {\n        key: 'mouseWheel',\n        value: function mouseWheel(event, self) {\n            var dir = 0;\n            if ('wheelDelta' in event) {\n                if (Math.abs(event.wheelDelta) - event.wheelDelta === 0) {\n                    dir = -1;\n                } else {\n                    dir = 1;\n                }\n            } else if (event.detail) {\n                if (Math.abs(event.detail) - event.detail === 0) {\n                    dir = 1;\n                } else {\n                    dir = -1;\n                }\n            }\n\n            return dir;\n        }\n\n        // Handles Entities\n\n        /**\r\n         * Jest.addEntity()\r\n         * object entity, renderFalse bool, state object\r\n         * renderFalse : controls if the item is added to the renderer.. idk this is kind of hack, basically its for things you want in the\r\n         * main update loop but doesn't render at all, so like a container\r\n         * state {name : string, OR id : number}: allows you to specify what state you want to add the entity to, if you dont specify it adds it to the current state\r\n         **/\n    }, {\n        key: 'addEntity',\n        value: function addEntity(object, renderFalse, state) {\n            // add the live prop since the renderer/update chooses to display or update based on it\n            if (!(\"live\" in object)) {\n                object.live = true;\n            }\n\n            this.renderFalse = renderFalse;\n\n            if (state) {\n                var foundState = this.getState(state);\n\n                if (foundState) {\n                    foundState.entityList.push(object);\n                    object.state = foundState;\n                }\n            } else {\n                this.entities.push(object);\n                object.state = this.currentState;\n            }\n\n            if (!renderFalse) {\n                this.renderer.addToRenderer(object);\n            }\n        }\n\n        /**\r\n         * Jest.removeEntity()\r\n         * object entity, state Object\r\n         * Removes an entity from the update cycle and renderer, you can also specify the state you want to remove from\r\n         **/\n    }, {\n        key: 'removeEntity',\n        value: function removeEntity(object, state) {\n            var entities = this.entities,\n                numEntities = entities.length;\n\n            if (state) {\n                var foundState = this.getState(state);\n\n                if (foundState) {\n                    entities = foundState.entityList;\n                    numEntities = entities.length;\n                }\n            }\n\n            var item = entities.indexOf(object);\n\n            if (typeof object.kill != 'undefined') {\n                object.kill();\n            }\n\n            entities.splice(item, 1);\n\n            this.renderer.removeFromRenderer(object);\n        }\n\n        /**\r\n         * Jest.addState()\r\n         * object options\r\n         * {name : string}\r\n         * Adds a state the Jest, states hold their own entity list, and render list\r\n         **/\n    }, {\n        key: 'addState',\n        value: function addState(name, enterState, exitState) {\n            var stateObj = {};\n\n            if (name) {\n                stateObj.name = name;\n            } else {\n                stateObj.name = this.states.length;\n            }\n\n            stateObj.enterState = enterState || undefined;\n\n            // assign it the next val\n            stateObj.id = this.states.length;\n            stateObj.renderList = [];\n            stateObj.entityList = [];\n            this.states.push(stateObj);\n        }\n\n        /**\r\n         * Jest.getState()\r\n         * object options\r\n         * {name : string, id : number}\r\n         * Finds and returns the state\r\n         **/\n    }, {\n        key: 'getState',\n        value: function getState(options) {\n            var foundState = false;\n\n            if (\"id\" in options) {\n                foundState = this.states[options.id];\n            } else if (\"name\" in options) {\n                var stateName = options.name;\n                for (var i = 0, len = this.states.length; i < len; i++) {\n                    if (this.states[i].name === stateName) {\n                        foundState = this.states[i];\n                        break;\n                    }\n                }\n            }\n\n            return foundState;\n        }\n\n        /**\r\n         * Jest.switchState()\r\n         * object options\r\n         * {name : string, id : number}\r\n         * Adds a state the Jest, states hold their own entity list, and render list\r\n         **/\n    }, {\n        key: 'switchState',\n        value: function switchState(options) {\n            var foundState = this.getState(options);\n\n            // throw in a debug if the state hasn't been found\n            if (foundState) {\n                if (options.exitTransition && !options.exitComplete) {\n                    // perform exit transition if one exists\n                    options.exitComplete = true;\n                    Game.addEntity(new Jest.Transition(options.exitTransition, function () {\n                        Game.switchState(options);\n                    }));\n                } else {\n                    // switch the render list, and the entity list\n                    this.currentState = foundState;\n                    this.renderer.renderList = this.currentState.renderList;\n                    this.entities = this.currentState.entityList;\n\n                    // if the state has an enter state function call it\n                    if (foundState.enterState) {\n                        foundState.enterState();\n                    }\n\n                    // Perform enter transition if one exists\n                    if (options.enterTransition) {\n                        Game.addEntity(new Jest.Transition(options.enterTransition));\n                    }\n                }\n            }\n        }\n\n        /**\r\n         * Jest.checkHit(x,y)\r\n         * x,y number\r\n         * Checks all the entities to see if they were hit by the coords. Very expensive right now definitly need to clean it up\r\n         **/\n    }, {\n        key: 'checkHit',\n        value: function checkHit(x, y) {\n            var numEntities = this.entities.length,\n                entities = this.entities;\n\n            this.hitEntities = [];\n\n            for (var id = 0, entLen = this.entities.length; id < entLen; id++) {\n                var object = entities[id];\n                if (object.live && object.clickable) {\n                    if (x > object.x && x < object.x + object.width && y > object.y && y < object.y + object.height) {\n                        this.hitEntities.push(object);\n                    }\n                }\n            }\n        }\n    }]);\n\n    return Jest;\n})();\n\nexports['default'] = Jest;\nmodule.exports = exports['default'];//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _es2015Sprite = __webpack_require__(4);\n\nvar _es2015Sprite2 = _interopRequireDefault(_es2015Sprite);\n\nvar _es2015Vector = __webpack_require__(5);\n\nvar _es2015Vector2 = _interopRequireDefault(_es2015Vector);\n\nvar TestSprite = (function (_Sprite) {\n    _inherits(TestSprite, _Sprite);\n\n    function TestSprite(options) {\n        _classCallCheck(this, TestSprite);\n\n        _get(Object.getPrototypeOf(TestSprite.prototype), 'constructor', this).call(this, options);\n\n        this.width = 32;\n        this.height = 32;\n        this.shape = true;\n        this.color = { r: 255, g: 0, b: 0, a: 255 };\n    }\n\n    return TestSprite;\n})(_es2015Sprite2['default']);\n\nexports['default'] = TestSprite;\n;\nmodule.exports = exports['default'];//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRDoveGFtcHAvaHRkb2NzL1Byb2plY3RzL2plc3QvZXhhbXBsZXMvYW5pbWF0ZWQgc3ByaXRlcy9UZXN0U3ByaXRlLmpzP2RjYWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7d0NBQW1CLENBQXFCOzs7O3dDQUNyQixDQUFxQjs7OztJQUVuQixVQUFVO2NBQVYsVUFBVTs7QUFDaEIsYUFETSxVQUFVLENBQ2YsT0FBTyxFQUFDOzhCQURILFVBQVU7O0FBRXZCLG1DQUZhLFVBQVUsNkNBRWpCLE9BQU8sRUFBQzs7QUFFZCxZQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztBQUNoQixZQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztBQUNqQixZQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztBQUNsQixZQUFJLENBQUMsS0FBSyxHQUFHLEVBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBQyxDQUFDO0tBQzdDOztXQVJnQixVQUFVOzs7cUJBQVYsVUFBVTtBQVM5QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNwcml0ZSBmcm9tICcuLi8uLi9lczIwMTUvU3ByaXRlJztcclxuaW1wb3J0IFZlY3RvciBmcm9tICcuLi8uLi9lczIwMTUvVmVjdG9yJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRlc3RTcHJpdGUgZXh0ZW5kcyBTcHJpdGV7XHJcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKXtcclxuICAgICAgICBzdXBlcihvcHRpb25zKSAgICAgICBcclxuXHJcbiAgICAgICAgdGhpcy53aWR0aCA9IDMyO1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gMzI7XHJcbiAgICAgICAgdGhpcy5zaGFwZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IHtyOiAyNTUsIGc6IDAsIGI6IDAsIGE6IDI1NX07XHJcbiAgICB9XHJcbn07XHJcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIEQ6L3hhbXBwL2h0ZG9jcy9Qcm9qZWN0cy9qZXN0L2V4YW1wbGVzL2FuaW1hdGVkIHNwcml0ZXMvVGVzdFNwcml0ZS5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjMuanMifQ==");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _Vector = __webpack_require__(5);\n\nvar _Vector2 = _interopRequireDefault(_Vector);\n\nvar Sprite = (function () {\n    function Sprite(options) {\n        _classCallCheck(this, Sprite);\n\n        options = options || {};\n        this.width = options.width || 32;\n        this.height = options.height || 32;\n\n        // Set the position\n        this.pos = options.pos || { x: 0, y: 0, z: 0 };\n        if (options.x && options.y) {\n            var z = 0;\n            if (options.z) {\n                z = options.z;\n            }\n            this.pos = new _Vector2['default'](options.x, options.y, z);\n        } else if (options.pos) {\n            this.pos = options.pos;\n        } else {\n            this.pos = new _Vector2['default'](0, 0, 0);\n        }\n\n        // Set drawing origin\n        this.origin = options.origin || { x: 0, y: 0, z: 0 };\n        if (options.ox && options.oy) {\n            var oz = 0;\n            if (options.oz) {\n                oz = options.oz;\n            }\n            this.origin = new _Vector2['default'](options.ox, options.oy, oz);\n        } else if (options.origin) {\n            this.origin = options.origin;\n        } else {\n            this.origin = new _Vector2['default'](0, 0, 0);\n        }\n\n        // Set an initial velocity\n        this.vel = options.vel || { x: 0, y: 0, z: 0 };\n        if (options.vx && options.vy) {\n            var vz = 0;\n            if (options.vz) {\n                vz = options.vz;\n            }\n            this.vel = new _Vector2['default'](options.vx, options.vy, vz);\n        } else if (options.vel) {\n            this.vel = options.vel;\n        } else {\n            this.vel = new _Vector2['default'](0, 0, 0);\n        }\n\n        // StartX and StartY are used for animated sprites to determine which frame to show\n        this.startX = options.startX || 0;\n        this.startY = options.startY || 0;\n\n        this.tileable = options.tileable || false;\n        if (this.tileable) {\n            this.endX = options.endX || this.width;\n            this.endY = options.endY || this.height;\n        }\n\n        // If theres not a resource specified we just assume its going to be a rect\n        if (options.resource === undefined) {\n            this.shape = true;\n            this.resource = {};\n        } else {\n            this.shape = false;\n            this.resource = options.resource;\n        }\n\n        this.angle = options.angle || 0;\n        this.thrust = options.thrust || 0;\n        this.color = options.color || { r: 255, g: 255, b: 255 };\n        this.alpha = 255;\n        this.clickable = options.clickable || false;\n\n        // for referencing a list of entities or sprites its a part of\n        if (options.list && options.list.length != 'undefined') {\n            this.list = options.list;\n            this.list.push(this);\n        } else {\n            this.list = [];\n        }\n\n        // required properties\n        this.visible = true;\n\n        this.animations = [];\n        this.curAnim = { name: \"\", frames: 0 };\n        this.isAnimating = false;\n\n        this.lastAnim = 0;\n        this.animSpeed = 0;\n\n        this.x = this.pos.x;\n        this.y = this.pos.y;\n\n        this.live = true;\n    }\n\n    // Handles updating the sprite\n\n    _createClass(Sprite, [{\n        key: 'update',\n        value: function update(deltaTime) {\n            if (this.isAnimating) {\n                if (new Date().getTime() > this.lastAnim + this.animSpeed) {\n                    this.lastAnim = new Date().getTime();\n                    this.startX = this.width * this.curAnim.frames[this.frame];\n                    this.frame++;\n                    if (this.frame > this.curAnim.frames.length - 1) {\n                        // stop if its a one shot animation\n                        if (this.animType !== 1) {\n                            this.isAnimating = false;\n                        } else {\n                            this.frame = 0;\n                        }\n                    }\n                }\n            }\n        }\n\n        // Add animation sequences for animated sprites\n    }, {\n        key: 'addAnimation',\n        value: function addAnimation(sequence, sequenceName) {\n            var aniSequence = { name: sequenceName, frames: sequence };\n            this.animations.push(aniSequence);\n        }\n\n        /** Play animation sequence\r\n         * sequenceName - name of prev added sequence\r\n         * animSpeed - milliseconds between frames\r\n         * animType - 0/null/undefined = play sequence full once, 1 = play until stopped\r\n        **/\n    }, {\n        key: 'playAnimation',\n        value: function playAnimation(sequenceName, animSpeed, animType) {\n            for (var i = 0, len = this.animations.length; i < len; i++) {\n                var curAnim = this.animations[i];\n                if (curAnim.name === sequenceName) {\n                    this.curAnim = curAnim;\n                    this.animSpeed = animSpeed;\n                    if (typeof animType == 'undefined') {\n                        this.animType = 0;\n                    } else {\n                        this.animType = animType;\n                    }\n                    this.frame = 0;\n                    this.isAnimating = true;\n                }\n            }\n        }\n    }, {\n        key: 'stopAnimation',\n        value: function stopAnimation() {\n            if (this.isAnimating) {\n                this.isAnimating = false;\n                this.curAnim = { name: \"\", frames: 0 };\n            }\n        }\n\n        // Check for collisions\n    }, {\n        key: 'checkCollision',\n        value: function checkCollision(x, y) {}\n\n        // Change the frame to a specific one\n    }, {\n        key: 'changeFrame',\n        value: function changeFrame(frame) {\n            this.startX = frame * this.width;\n        }\n    }, {\n        key: 'kill',\n        value: function kill() {\n            // do something before its \"dead\"\n            if (this.list.length > 0) {\n                var listItem = this.list.length,\n                    list = this.list,\n                    item = list.indexOf(this);\n\n                if (item) {\n                    list.splice(item, 1);\n                }\n            }\n        }\n\n        // Draw\n    }, {\n        key: 'render',\n        value: function render(context) {\n            context.save();\n            if (!this.shape) {\n\n                // render to the nearest full pixel\n                var cX = 0.5 + (this.pos.x - this.origin.x) << 0,\n                    cY = 0.5 + (this.pos.y - this.origin.y) << 0;\n\n                context.drawImage(this.resource.source, this.startX, this.startY, this.width, this.height, cX, cY, this.width, this.height);\n            } else {\n                var color = this.color;\n                context.fillStyle = \"rgba(\" + color.r + \",\" + color.g + \",\" + color.b + \",\" + this.alpha + \")\";\n                context.fillRect(this.pos.x - this.origin.x, this.pos.y - this.origin.y, this.width, this.height);\n            }\n            context.restore();\n        }\n    }, {\n        key: 'clicked',\n        value: function clicked() {\n            // Object was clicked do some stuff brah\n        }\n    }, {\n        key: 'mouseDown',\n        value: function mouseDown() {\n            // Object was mousedDown on do some stuff brah\n        }\n    }]);\n\n    return Sprite;\n})();\n\nexports['default'] = Sprite;\n;\nmodule.exports = exports['default'];//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar Vector = (function () {\n    function Vector(x, y, z) {\n        _classCallCheck(this, Vector);\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        var copy = function copy(v) {\n            this.x = v.x;\n            this.y = v.y;\n            this.z = v.z;\n        },\n            add = function add(v) {\n            this.x += v.x;\n            this.y += v.y;\n            this.z += v.z;\n        },\n            sub = function sub(v) {\n            this.x -= v.x;\n            this.y -= v.y;\n            this.z -= v.z;\n        },\n            cross = function cross(v) {\n            this.tx = this.x;\n            this.ty = this.y;\n            this.tz = this.z;\n\n            this.x = this.ty * v.z - this.tz * v.y;\n            this.y = this.tz * v.x - this.tx * v.z;\n            this.z = this.tx * v.y - this.ty * v.x;\n        },\n            multiply = function multiply(s) {\n            this.x *= s;\n            this.y *= s;\n            this.z *= s;\n        },\n            distanceTo = function distanceTo(v) {\n            this.dx = this.x - v.x;\n            this.dy = this.y - v.y;\n            this.dz = this.z - v.z;\n\n            return Math.sqrt(this.dx * this.dx + this.dy * this.dy + this.dz * this.dz);\n        },\n            distanceToSquared = function distanceToSquared(v) {\n            this.dx = this.x - v.x;\n            this.dy = this.y - v.y;\n            this.dz = this.z - v.z;\n\n            return this.dx * this.dx + this.dy * this.dy + this.dz * this.dz;\n        },\n            length = function length() {\n            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n        },\n            lengthSq = function lengthSq() {\n            return this.x * this.x + this.y * this.y + this.z * this.z;\n        },\n            negate = function negate() {\n            this.x = -this.x;\n            this.y = -this.y;\n            this.z = -this.z;\n        },\n            dot = function dot(v) {\n            return this.x * v.x + this.y * v.y + this.z * v.z;\n        },\n            clone = function clone() {\n            return new Vector(this.x, this.y, this.z);\n        },\n            toString = function toString() {\n            return '(' + this.x + ', ' + this.y + ', ' + this.z + ')';\n        };\n    }\n\n    _createClass(Vector, [{\n        key: 'add',\n        value: function add(a, b) {\n            return new Vector(a.x + b.x, a.y + b.y, a.z + b.z);\n        }\n    }, {\n        key: 'sub',\n        value: function sub(a, b) {\n            return new Vector(a.x - b.x, a.y - b.y, a.z - b.z);\n        }\n    }, {\n        key: 'negate',\n        value: function negate() {\n            this.x = -this.x;\n            this.y = -this.y;\n            this.z = -this.z;\n        }\n    }, {\n        key: 'multiply',\n        value: function multiply(a, s) {\n            return new Vector(a.x * s, a.y * s, a.z * s);\n        }\n    }, {\n        key: 'cross',\n        value: function cross(a, b) {\n            return new Vector(a.y * b.z - a.z * b.y, a.z * b.x - a.x * b.z, a.x * b.y - a.y * b.x);\n        }\n    }, {\n        key: 'dot',\n        value: function dot(v) {\n            return this.x * v.x + this.y * v.y + this.z * v.z;\n        }\n    }, {\n        key: 'distance',\n        value: function distance(a, b) {\n            var dx = a.x - b.x,\n                dy = a.y - b.y,\n                dz = a.z - b.z;\n\n            return Math.sqrt(dx * dx + dy * dy + dz * dz);\n        }\n    }, {\n        key: 'length',\n        value: function length() {\n            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n        }\n    }, {\n        key: 'mulScale',\n        value: function mulScale(a, b) {\n            return new Vector(this.x * b, this.y * b, this.z * b);\n        }\n    }, {\n        key: 'normalize',\n        value: function normalize() {\n            if (this.length() > 0) this.ool = 1.0 / this.length();else this.ool = 0;\n\n            this.x *= this.ool;\n            this.y *= this.ool;\n            this.z *= this.ool;\n            return this;\n        }\n    }]);\n\n    return Vector;\n})();\n\nexports['default'] = Vector;\nmodule.exports = exports['default'];//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar ResourceManager = (function () {\n    function ResourceManager() {\n        _classCallCheck(this, ResourceManager);\n\n        this.resources = [];\n        this.loaded = 0;\n        this.loadingComplete = true;\n    }\n\n    /**\r\n     * Resourcemanager.add(_resource, _type)\r\n     * object resource, String/Number, String\r\n     * adds a new resource for use and begins the process of loading\r\n     **/\n\n    _createClass(ResourceManager, [{\n        key: 'add',\n        value: function add(_resource, _type, _name) {\n            var resource = { 'path': _resource, 'type': _type, 'name': _name };\n\n            // if the resource is an existing image\n            if (_resource.src) {\n                resource.path = _resource.src;\n            }\n\n            this.loadingComplete = false;\n\n            if (_name === undefined) {\n                _name = \"\";\n            }\n\n            if (_type == 1 || _type == \"img\" || _type === null) {\n                if (_resource.nodeType === 1) {\n                    resource.source = _resource;\n                } else {\n                    resource.source = new Image();\n                }\n\n                this.resources.push({ resource: resource, name: _name });\n                resource.source.onload = (function (callback, res) {\n                    resource.loaded = true;callback.loadImg(callback, res);\n                })(this, resource);\n\n                if (_resource.nodeType === 1) {\n                    resource.source.src = _resource.src;\n                } else {\n                    resource.source.src = _resource;\n                }\n            } else if (_type == 2 || _type == \"audio\") {\n                resource.source = new Audio();\n                this.resources.push({ resource: resource, name: _name });\n                this.loadAudio(resource);\n                resource.source.src = _resource;\n            }\n\n            return resource;\n        }\n\n        /**\r\n         * Resourcemanager.loadImg()\r\n         * object event\r\n         * reports when an image is loaded\r\n         **/\n    }, {\n        key: 'loadImg',\n        value: function loadImg(callback, resource) {\n            if (resource.source.complete && resource.source.width) {\n                callback.loaded++;\n\n                if (callback.loaded === callback.resources.length) {\n                    callback.loadingComplete = true;\n                }\n            } else {\n                setTimeout(function () {\n                    callback.loadImg(callback, resource);\n                }, 10);\n            }\n        }\n\n        /**\r\n         * Resourcemanager.loadAudio(audio)\r\n         * object audio resource\r\n         * reports when audio is loaded\r\n         **/\n    }, {\n        key: 'loadAudio',\n        value: function loadAudio(audio, timeOut) {\n            clearTimeout(timeOut);\n            timeOut = 0;\n\n            var self = this;\n\n            if (audio.source.readyState > 0) {\n                this.loaded++;\n\n                if (this.loaded === this.resources.length) {\n                    this.loadingComplete = true;\n                }\n            } else {\n                timeOut = setTimeout(function () {\n                    self.loadAudio(audio, timeOut);\n                }, 100);\n            }\n        }\n\n        /**\r\n         * Resourcemanager.getResource(name)\r\n         * string/text\r\n         * returns the resource by name if found\r\n         **/\n    }, {\n        key: 'getResource',\n        value: function getResource(_name) {\n            var resources = this.resources;\n\n            for (var i = 0, l = resources.length; i < l; i++) {\n                if (resources[i].name == _name) {\n                    return resources[i].resource;\n                }\n            }\n        }\n    }]);\n\n    return ResourceManager;\n})();\n\nexports['default'] = ResourceManager;\nmodule.exports = exports['default'];//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Renderer = (function () {\n    function Renderer(canvas) {\n        _classCallCheck(this, Renderer);\n\n        this.renderList = [];\n        this.canvas = canvas;\n        this.context = this.canvas.getContext(\"2d\");\n        this.width = this.canvas.width;\n        this.height = this.canvas.height;\n    }\n\n    // Todo: I dont like this. fix the sorting, right now sorts on y, but could potentially sort based on z\n\n    _createClass(Renderer, [{\n        key: \"redraw\",\n        value: function redraw() {\n            this.context.clearRect(0, 0, this.width, this.height);\n            //this.renderList.sort(function(a,b){return b.y-a.y});\n\n            this.renderList.sort(function (a, b) {\n                if (a.bg && b.bg) {\n                    return b.bgIndex - a.bgIndex;\n                } else if (a.ui && b.ui) {\n                    return b.uiIndex - a.uiIndex;\n                } else if (a.bg || b.ui) {\n                    return 1;\n                } else if (b.bg || a.ui) {\n                    return -1;\n                } else if (a.pos && b.pos) {\n                    return b.pos.z - a.pos.z;\n                }\n                return 0;\n            });\n\n            var id = this.renderList.length;\n\n            while (id--) {\n                var curObject = this.renderList[id];\n                if (curObject.visible) {\n                    curObject.render(this.context);\n                }\n            }\n        }\n\n        /**\r\n         * Renderer.addToRenderer(object)\r\n         *\r\n         * add a new item to the renderer\r\n         **/\n    }, {\n        key: \"addToRenderer\",\n        value: function addToRenderer(object) {\n            this.renderList.push(object);\n        }\n\n        /**\r\n         * Renderer.removeFromRenderer(object)\r\n         *\r\n         * remove an item from the renderer\r\n         **/\n    }, {\n        key: \"removeFromRenderer\",\n        value: function removeFromRenderer(object) {\n            var list = this.renderList,\n                objIndex = list.indexOf(object);\n\n            if (objIndex !== -1) {\n                list.splice(list.indexOf(object), 1);\n            }\n        }\n    }]);\n\n    return Renderer;\n})();\n\nexports[\"default\"] = Renderer;\nmodule.exports = exports[\"default\"];//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRDoveGFtcHAvaHRkb2NzL1Byb2plY3RzL2plc3QvZXMyMDE1L1JlbmRlcmVyLmpzPzY4YWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztJQUFxQixRQUFRO0FBQ2QsYUFETSxRQUFRLENBQ2IsTUFBTSxFQUFFOzhCQURILFFBQVE7O0FBRXJCLFlBQUksQ0FBQyxVQUFVLEdBQUksRUFBRSxDQUFDO0FBQ3RCLFlBQUksQ0FBQyxNQUFNLEdBQU0sTUFBTSxDQUFDO0FBQ3hCLFlBQUksQ0FBQyxPQUFPLEdBQUssSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDOUMsWUFBSSxDQUFDLEtBQUssR0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztBQUNuQyxZQUFJLENBQUMsTUFBTSxHQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO0tBQ3ZDOzs7O2lCQVBnQixRQUFROztlQVNuQixrQkFBRztBQUNMLGdCQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLElBQUksQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDOzs7QUFHbkQsZ0JBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUM5QixvQkFBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLEVBQUM7QUFDWiwyQkFBTyxDQUFDLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUM7aUJBQ2hDLE1BQUssSUFBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLEVBQUM7QUFDbEIsMkJBQU8sQ0FBQyxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDO2lCQUNoQyxNQUFLLElBQUcsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSxFQUFDO0FBQ2xCLDJCQUFPLENBQUMsQ0FBQztpQkFDWixNQUFLLElBQUcsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSxFQUFDO0FBQ2xCLDJCQUFPLENBQUMsQ0FBQyxDQUFDO2lCQUNiLE1BQUssSUFBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUM7QUFDcEIsMkJBQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7aUJBQzVCO0FBQ0QsdUJBQU8sQ0FBQyxDQUFDO2FBQ1osQ0FBQyxDQUFDOztBQUVILGdCQUFJLEVBQUUsR0FBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQzs7QUFFakMsbUJBQU0sRUFBRSxFQUFFLEVBQUM7QUFDUCxvQkFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNwQyxvQkFBRyxTQUFTLENBQUMsT0FBTyxFQUFDO0FBQ2pCLDZCQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDbEM7YUFDSjtTQUNKOzs7Ozs7Ozs7ZUFNWSx1QkFBQyxNQUFNLEVBQUU7QUFDbEIsZ0JBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ2hDOzs7Ozs7Ozs7ZUFNaUIsNEJBQUMsTUFBTSxFQUFFO0FBQ3ZCLGdCQUFJLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVTtnQkFDdEIsUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7O0FBRXBDLGdCQUFHLFFBQVEsS0FBSyxDQUFDLENBQUMsRUFBQztBQUNmLG9CQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDeEM7U0FDSjs7O1dBekRnQixRQUFROzs7cUJBQVIsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlbmRlcmVye1xyXG4gICAgY29uc3RydWN0b3IoY2FudmFzKSB7XHJcbiAgICAgICAgdGhpcy5yZW5kZXJMaXN0ICA9IFtdO1xyXG4gICAgICAgIHRoaXMuY2FudmFzICAgID0gY2FudmFzO1xyXG4gICAgICAgIHRoaXMuY29udGV4dCAgID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG4gICAgICAgIHRoaXMud2lkdGggICAgID0gdGhpcy5jYW52YXMud2lkdGg7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgICAgPSB0aGlzLmNhbnZhcy5oZWlnaHQ7XHJcbiAgICB9XHJcbiAgICAvLyBUb2RvOiBJIGRvbnQgbGlrZSB0aGlzLiBmaXggdGhlIHNvcnRpbmcsIHJpZ2h0IG5vdyBzb3J0cyBvbiB5LCBidXQgY291bGQgcG90ZW50aWFsbHkgc29ydCBiYXNlZCBvbiB6XHJcbiAgICByZWRyYXcoKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LmNsZWFyUmVjdCgwLDAsdGhpcy53aWR0aCx0aGlzLmhlaWdodCk7XHJcbiAgICAgICAgLy90aGlzLnJlbmRlckxpc3Quc29ydChmdW5jdGlvbihhLGIpe3JldHVybiBiLnktYS55fSk7XHJcblxyXG4gICAgICAgIHRoaXMucmVuZGVyTGlzdC5zb3J0KGZ1bmN0aW9uKGEsYil7XHJcbiAgICAgICAgICAgIGlmKGEuYmcgJiYgYi5iZyl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYi5iZ0luZGV4IC0gYS5iZ0luZGV4O1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihhLnVpICYmIGIudWkpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGIudWlJbmRleCAtIGEudWlJbmRleDtcclxuICAgICAgICAgICAgfWVsc2UgaWYoYS5iZyB8fCBiLnVpKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiAxO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihiLmJnIHx8IGEudWkpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihhLnBvcyAmJiBiLnBvcyl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYi5wb3MueiAtIGEucG9zLno7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHZhciBpZCA9ICB0aGlzLnJlbmRlckxpc3QubGVuZ3RoO1xyXG5cclxuICAgICAgICB3aGlsZShpZC0tKXtcclxuICAgICAgICAgICAgdmFyIGN1ck9iamVjdCA9IHRoaXMucmVuZGVyTGlzdFtpZF07XHJcbiAgICAgICAgICAgIGlmKGN1ck9iamVjdC52aXNpYmxlKXtcclxuICAgICAgICAgICAgICAgIGN1ck9iamVjdC5yZW5kZXIodGhpcy5jb250ZXh0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVuZGVyZXIuYWRkVG9SZW5kZXJlcihvYmplY3QpXHJcbiAgICAgKlxyXG4gICAgICogYWRkIGEgbmV3IGl0ZW0gdG8gdGhlIHJlbmRlcmVyXHJcbiAgICAgKiovXHJcbiAgICBhZGRUb1JlbmRlcmVyKG9iamVjdCkge1xyXG4gICAgICAgIHRoaXMucmVuZGVyTGlzdC5wdXNoKG9iamVjdCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJlbmRlcmVyLnJlbW92ZUZyb21SZW5kZXJlcihvYmplY3QpXHJcbiAgICAgKlxyXG4gICAgICogcmVtb3ZlIGFuIGl0ZW0gZnJvbSB0aGUgcmVuZGVyZXJcclxuICAgICAqKi9cclxuICAgIHJlbW92ZUZyb21SZW5kZXJlcihvYmplY3QpIHtcclxuICAgICAgICB2YXIgbGlzdCA9IHRoaXMucmVuZGVyTGlzdCxcclxuICAgICAgICAgICAgb2JqSW5kZXggPSBsaXN0LmluZGV4T2Yob2JqZWN0KTtcclxuXHJcbiAgICAgICAgaWYob2JqSW5kZXggIT09IC0xKXtcclxuICAgICAgICAgICAgbGlzdC5zcGxpY2UobGlzdC5pbmRleE9mKG9iamVjdCksIDEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBEOi94YW1wcC9odGRvY3MvUHJvamVjdHMvamVzdC9lczIwMTUvUmVuZGVyZXIuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiI3LmpzIn0=");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Label = (function () {\n    function Label(options) {\n        _classCallCheck(this, Label);\n\n        options = options || {};\n        this.text = options.text || \"Undefined Label Text\";\n        this.font = options.font || \"1em Arial\";\n\n        this.pos = { x: 0, y: 0 };\n        this.pos.x = options.x || 0;\n        this.pos.y = options.y || 0;\n        this.pos = options.pos || { x: this.pos.x, y: this.pos.y };\n        this.color = options.color || \"#fff\";\n\n        this.x = this.pos.x;\n        this.y = this.pos.y;\n\n        this.live = true;\n        this.visible = true;\n    }\n\n    _createClass(Label, [{\n        key: \"update\",\n        value: function update(deltaTime) {}\n\n        // Draw the label\n    }, {\n        key: \"render\",\n        value: function render(context) {\n            context.fillStyle = this.color;\n            context.font = this.font;\n            context.fillText(this.text, this.pos.x, this.pos.y);\n        }\n    }]);\n\n    return Label;\n})();\n\nexports[\"default\"] = Label;\nmodule.exports = exports[\"default\"];//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vRDoveGFtcHAvaHRkb2NzL1Byb2plY3RzL2plc3QvZXMyMDE1L0xhYmVsLmpzP2FmNGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztJQUFxQixLQUFLO0FBQ1gsYUFETSxLQUFLLENBQ1YsT0FBTyxFQUFDOzhCQURILEtBQUs7O0FBRWxCLGVBQU8sR0FBRyxPQUFPLElBQUksRUFBRSxDQUFDO0FBQ3hCLFlBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksSUFBSSxzQkFBc0IsQ0FBQztBQUNuRCxZQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLElBQUksV0FBVyxDQUFDOztBQUV4QyxZQUFJLENBQUMsR0FBRyxHQUFHLEVBQUMsQ0FBQyxFQUFHLENBQUMsRUFBRSxDQUFDLEVBQUcsQ0FBQyxFQUFDLENBQUM7QUFDMUIsWUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDNUIsWUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDNUIsWUFBSSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxJQUFJLEVBQUMsQ0FBQyxFQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBQyxDQUFDO0FBQzNELFlBQUksQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssSUFBSSxNQUFNLENBQUM7O0FBRXJDLFlBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDcEIsWUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQzs7QUFFcEIsWUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7QUFDakIsWUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7S0FDdkI7O2lCQWpCZ0IsS0FBSzs7ZUFrQmhCLGdCQUFDLFNBQVMsRUFBRSxFQUFFOzs7OztlQUVkLGdCQUFDLE9BQU8sRUFBRTtBQUNaLG1CQUFPLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7QUFDL0IsbUJBQU8sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztBQUN6QixtQkFBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDdkQ7OztXQXhCZ0IsS0FBSzs7O3FCQUFMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBMYWJlbHtcclxuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpe1xyXG4gICAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xyXG4gICAgICAgIHRoaXMudGV4dCA9IG9wdGlvbnMudGV4dCB8fCBcIlVuZGVmaW5lZCBMYWJlbCBUZXh0XCI7XHJcbiAgICAgICAgdGhpcy5mb250ID0gb3B0aW9ucy5mb250IHx8IFwiMWVtIEFyaWFsXCI7XHJcblxyXG4gICAgICAgIHRoaXMucG9zID0ge3ggOiAwLCB5IDogMH07XHJcbiAgICAgICAgdGhpcy5wb3MueCA9IG9wdGlvbnMueCB8fCAwO1xyXG4gICAgICAgIHRoaXMucG9zLnkgPSBvcHRpb25zLnkgfHwgMDtcclxuICAgICAgICB0aGlzLnBvcyA9IG9wdGlvbnMucG9zIHx8IHt4IDogdGhpcy5wb3MueCwgeSA6IHRoaXMucG9zLnl9O1xyXG4gICAgICAgIHRoaXMuY29sb3IgPSBvcHRpb25zLmNvbG9yIHx8IFwiI2ZmZlwiO1xyXG5cclxuICAgICAgICB0aGlzLnggPSB0aGlzLnBvcy54O1xyXG4gICAgICAgIHRoaXMueSA9IHRoaXMucG9zLnk7XHJcblxyXG4gICAgICAgIHRoaXMubGl2ZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy52aXNpYmxlID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIHVwZGF0ZShkZWx0YVRpbWUpIHt9XHJcbiAgICAvLyBEcmF3IHRoZSBsYWJlbFxyXG4gICAgcmVuZGVyKGNvbnRleHQpIHtcclxuICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IHRoaXMuY29sb3I7XHJcbiAgICAgICAgY29udGV4dC5mb250ID0gdGhpcy5mb250O1xyXG4gICAgICAgIGNvbnRleHQuZmlsbFRleHQodGhpcy50ZXh0LCB0aGlzLnBvcy54LCB0aGlzLnBvcy55KTtcclxuICAgIH1cclxufVxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIEQ6L3hhbXBwL2h0ZG9jcy9Qcm9qZWN0cy9qZXN0L2VzMjAxNS9MYWJlbC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjguanMifQ==");

/***/ }
/******/ ])